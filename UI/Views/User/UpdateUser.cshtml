@using Core.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IResultWithDataDto<Core.DTOs.UserDtos.ReadDtos.ReadUpdateUserDto>

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
@if (!Model.IsSuccess)
{
    <div class="card container-xl mt-3">
        <div class="text-center p-5">
            <h1 class="display-4 text-danger">Üzgünüz</h1>
            <p>@Model.Message</p>
            <p>@Model.Err</p>
        </div>
    </div>
}
else
{
    <form id="updateForm" method="post" action="/kullanici-guncelle">
        <div class="page-header d-print-none">
            <div class="container-xl">
                <div class="row g-2 align-items-center">
                    <div class="col">
                        <!-- Page pre-title -->
                        <h2 class="page-title">
                            Şube Düzenle
                        </h2>
                    </div>
                    <!-- Page title actions -->
                    <div class="col-auto ms-auto d-print-none">
                        <div class="btn-list">
                            <span class="d-none d-sm-inline">
                                <a href="/deneme-url?returnUrl=@ViewData["ReturnUrl"]" class="btn">
                                    Boş Kutu
                                </a>
                            </span>

                            <button id="submitButton" type="button" class="btn btn-warning text-white">
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M12 5l0 14"></path><path d="M5 12l14 0"></path>
                                </svg>
                                Kullanıcıyı Güncelle
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card container-xl mt-3">
            <table class="table">
                <thead>
                <tr>
                    <th>Adı Soyadı</th>
                    <th>Aktif Mi?</th>
                    <th>Rol</th>
                    <th>Oluşturulma Tarihi</th>
                </tr>
                </thead>
                <tbody class="table-border-bottom-0">
                <tr>
                    <td class="col-2">
                        <input id="usernameInput" class="form-control" name="Username" value="@Model.Data.Username"/>
                        <input id="idInput" type="hidden" name="ID" value="@Model.Data.ID"/>
                        <input type="hidden" name="CreatedAt" value="@Model.Data.CreatedAt"/>
                        <input id="returnUrlInput" type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]"/>

                    </td>
                    <td class="col-2">
                        <div class="btn-group w-100" role="group">
                            <div class="form-selectgroup form-selectgroup-boxes d-flex">
                                <label class="form-selectgroup-item flex-fill">
                                    <input type="radio" value="1" name="Status" class="form-selectgroup-input" checked="@(Model.Data.Status == EntityStatusEnum.Offline)">
                                    <div class="form-selectgroup-label d-flex align-items-center p-3">
                                        <div class="me-3">
                                            <span class="form-selectgroup-check"></span>
                                        </div>
                                        <div>
                                            <strong>Pasif</strong>
                                        </div>
                                    </div>
                                </label>
                                <label class="form-selectgroup-item flex-fill">
                                    <input type="radio" value="0" name="Status" class="form-selectgroup-input"
                                           checked="@(Model.Data.Status == EntityStatusEnum.Online)">
                                    <div class="form-selectgroup-label d-flex align-items-center p-3">
                                        <div class="me-3">
                                            <span class="form-selectgroup-check"></span>
                                        </div>
                                        <div>
                                            <strong>Aktif</strong>
                                        </div>
                                    </div>
                                </label>
                            </div>
                        </div>
                    </td>
                    <td class="col-6">
                        <div class="row justify-content-around">
                            <div class="mb-3">
                                <div class="form-selectgroup">

                                    <label class="form-selectgroup-item">
                                        <input id="hrInput" type="radio" data-checkadd name="Role" value="0" class="form-selectgroup-input" checked="@(Model.Data.Role == UserRoleEnum.HumanResources)">
                                        <span class="form-selectgroup-label">
                                            <!-- Download SVG icon from http://tabler-icons.io/i/user -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-letter-i">
                                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 4l0 16"/>
                                            </svg>
                                            İnsan Kaynakları
                                        </span>
                                    </label>
                                    <label class="form-selectgroup-item">
                                        <input id="directorInput" type="radio" data-checkadd name="Role" value="1" class="form-selectgroup-input" checked="@(Model.Data.Role == UserRoleEnum.Director)">
                                        <span class="form-selectgroup-label">
                                            <!-- Download SVG icon from http://tabler-icons.io/i/home -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-letter-g">
                                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-2h-4"/>
                                            </svg>
                                            Genel Müdür
                                        </span>
                                    </label>
                                    <label class="form-selectgroup-item">
                                        <input id="branchManagerInput" type="radio" data-checkadd name="Role" value="2" class="form-selectgroup-input" checked="@(Model.Data.Role == UserRoleEnum.BranchManager)">
                                        <span class="form-selectgroup-label">
                                            <!-- Download SVG icon from http://tabler-icons.io/i/circle -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-letter-s">
                                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M17 8a4 4 0 0 0 -4 -4h-2a4 4 0 0 0 0 8h2a4 4 0 0 1 0 8h-2a4 4 0 0 1 -4 -4"/>
                                            </svg>
                                            Şube Sorumlusu
                                        </span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div id="branchSectionDirector" class="row d-none">
                            <select name="BranchDirectorNames" multiple id="branchSelectDirector" class="form-select" placeholder="Şube Seçiniz!">
                                @foreach (var item in Model.Data.DirectorBranches)
                                {
                                    <option value="@item.ID">@item.Name</option>
                                }
                            </select>
                        </div>
                        <div id="branchSectionBranchManager" class="row d-none">
                            <select name="BranchBranchManagerNames" id="branchSelectBranchManager" class="form-select" placeholder="Şube Seçiniz!">
                                @foreach (var item in Model.Data.BranchManagerBranches)
                                {
                                    <option value="@item.ID">@item.Name</option>
                                }
                            </select>
                        </div>
                    </td>
                    <td class="col-2">
                        @Model.Data.CreatedAt.ToString("dd/MM/yyyy")
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </form>
    @*<script src="/js/custom/user/userUpdate.js"></script>*@
    <script>
        document.addEventListener('DOMContentLoaded',function() {
           let branchDirectorSelect = new TomSelect($('#branchSelectDirector'));
           let branchBranchManagerSelect = new TomSelect($('#branchSelectBranchManager'));
           branchBranchManagerSelect.clear();
           branchDirectorSelect.clear();
            if('@Model.Data.Role.ToString()' === 'Director'){
                $('#branchSectionDirector').removeClass('d-none')
   
                  let branchList = @Html.Raw(Json.Serialize(Model.Data.SelectedBranches))
                  branchList.forEach(function(branch) {
                          branchDirectorSelect.addItem(branch.id);
                      });    
            }
            if('@Model.Data.Role.ToString()' === 'BranchManager'){
                $('#branchSectionBranchManager').removeClass('d-none')
                                  let branchList = @Html.Raw(Json.Serialize(Model.Data.SelectedBranches))
                                  branchList.forEach(function(branch) {
                                          branchBranchManagerSelect.addItem(branch.id);
                                      });   
            }
            document.querySelectorAll('[data-checkadd]').forEach(function(radio) {
                    radio.addEventListener('change', function() {
                        if (this.value === '1') {
                           $('#branchSectionBranchManager').addClass('d-none') 
                           $('#branchSectionDirector').removeClass('d-none')
                            
                        } else if(this.value === '2') {
                            $('#branchSectionDirector').addClass('d-none')
                            $('#branchSectionBranchManager').removeClass('d-none')
                        }
                        else{
                           $('#branchSectionBranchManager').addClass('d-none')  
                           $('#branchSectionDirector').addClass('d-none')
                        }
                    });
                });
            $('#submitButton').on('click',function (e) {
                //spinnerStart($('#submitButton'))
                e.preventDefault();
                let formData = $("#updateForm").serializeArray();            
                let selectedBranches =[]
                if ($('#directorInput').prop('checked')) { // Genel Müdür
                        selectedBranches = [...selectedBranches, ...$("#branchSectionDirector select").val() || []];
                        
                    } 
                else if ($('#branchManagerInput').prop('checked')) { // Şube Sorumlusu
                        selectedBranches = [...selectedBranches, $("#branchSectionBranchManager select").val() || []];
                        
                    }
                else{
                    branchDirectorSelect.clear();
                    branchBranchManagerSelect.clear()
                }
                 selectedBranches.forEach(function(branchId) {
                        formData.push({ name: "BranchNames", value: branchId });
                    });
                console.log(formData)
                $.ajax({
                    type: "POST",
                    url: "/kullanici-guncelle",
                    data: formData // Form verilerini al
                }).done(function (res) {
                    spinnerEnd($('#submitButton'))
                    if (res.isSuccess){
                        $('#success-modal-message').text("Kullanıcı Başarılı Bir Şekilde Güncellendi.")
                        $('#success-modal').modal('show')
                        $('#success-modal-button').click(function () {
                            window.location.href = "/kullanici-listesi";
                        });
                    }
                    else{
                        $('#error-modal-message').text(res.message)
                        $('#error-modal').modal('show')
                    }
                })
            });
        })
    </script>
}